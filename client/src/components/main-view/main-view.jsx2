import React, { Component } from "react";
import axios from "axios";

/*sources of Bootstrap code*/
import Container from "react-bootstrap/Container";
import Col from "react-bootstrap/Col";
import Row from "react-bootstrap/Row";

/*sources of all Individual files and folders*/
import { MovieCard } from "../movie-card/movie-card";
import { MovieView } from "../movie-view/movie-view";
import { LoginView } from "../login-view/login-view";
import { RegistrationView } from "../registration-view/registration-view";

export class MainView extends Component {
  constructor() {
    /* Call the superclass constructor so React can initialize it */
    super();
    /* Initialize the state to an empty object so we can destructure it later */
    this.state = {
      movies: null,
      selectedMovie: null,
      user: null,
      register: false,
    };
  }

  componentDidMount() {
    let accessToken = localStorage.getItem("token");
    if (accessToken !== null) {
      this.setState({
        user: localStorage.getItem("user"),
      });
      this.getMovies(accessToken);
    }
  }

  /***USERS REQUESTS()***/
  /* Add data for a new user (Allow new users to login/register)*/
  /*The auth information (user and token) received from the handleSubmit method which has been saved in localStorage*/
  onLoggedIn(authData) {
    /* authdata help to login console*/
    console.log(authData);
    this.setState({ user: authData.user.Username });

    localStorage.setItem("token", authData.token);
    localStorage.setItem("user", authData.user.Username);
    this.getMovies(authData.token);
  }

  /***MOVIE REQUESTS()***/
  /* Gets the list of ALL movie data (Return a list of ALL movies to the user)*/
  getMovies(token) {
    axios
      .get("https://rhubarb-crisp-92657.herokuapp.com/movies", {
        /*By passing bearer authorization in the header of our HTTP requests, we can make authenticated requests to our API*/
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((response) => {
        /* Assign the result to the state*/
        this.setState({
          movies: response.data,
        });
      })
      .catch(function (error) {
        console.log(error);
      });
  }

  onRegister = () => {
    if(!this.state.register){
      this.setState({register: true});
    }else{
      this.setState({register: false});
    }
  }

  /* This overrides the render() method of the superclass, No need to call super() though, as it does nothing by default */
  render() {
  const { movies, selectedMovie, user, register } = this.state;
  if (!user && !register) return <LoginView onClick={this.onRegister} onLoggedIn={user => this.onLoggedIn(user)} />
  if (register) return <RegistrationView  onClick={this.onRegister}  />
  /* before the movies have been loaded */
  if (!movies) return <div className="main-view" />;

    return (
        <div className="main-view">
          <Container>
            <Row>
              {selectedMovie ? (
                <MovieView
                  movie={selectedMovie}
                  previous={(movie) => this.onMovieClick(!movie)}
                />
              ) : (
                movies.map((movie) => (
                  <Col key={movie._id} xs={12} sm={6} md={4}>
                    <MovieCard
                      key={movie._id}
                      movie={movie}
                      click={(movie) => this.onMovieClick(movie)}
                    />
                  </Col>
                ))
              )}
            </Row>
          </Container>
        </div>
    );
  }
}
